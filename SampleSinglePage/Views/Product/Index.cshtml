
@model SampleSinglePage.Models.ViewModels.ProductViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>




<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta name="viewport" content="width=device-width" />
    <link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@300&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/Custom/product.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <title>Index</title>
</head>
<body>
   
    <div class="container col-sm-12">
        <div class="row">
            <div class="col-sm-12">
                @using (Html.BeginForm())
                {
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            @Html.LabelFor(model => model.Title)
                            @Html.TextBoxFor(model => model.Title, new { @id = "title", htmlAttributes = new { @class = "form-textbox col-sm-9" } })
                            <br />
         
                            <br />
                            @Html.LabelFor(model => model.Ref_Category.Id, "", htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.DropDownList("Ref_Categories", new SelectList(Model.SelectCategoris(), "ID", "Title"), "--select category--", htmlAttributes: new { @id = "categoryRef" })
                        </div>
                        <br />
                        <div class="col-sm-6">
                            <input type="button" id="btn-add" value="Add" />
                        </div>
                    </div>
                }
                <hr />
                @foreach (var item in Model.SelectProducts())
                {
                    <div class="col-sm-3 product-card">
                        <div class="category-div">
                            @Html.DisplayFor(modelItem =>item.Ref_Category.Title)
                        </div>
                        <div class="product-title-div">
                            @Html.DisplayFor(model => item.Title)
                        </div>
                        <span id="product-id" hidden>@Html.DisplayFor(modelItem => item.Id)</span>
                        <hr />
                    
                        <br />
                        <button id="btn-select">Select</button>
                    </div>
                }

            </div>
        </div>
    </div>
    <script type="text/javascript"></script>
    <script>
        $(document).ready(function () {
            function sendAjaxRequest(url, type, data) {
                return $.ajax({
                    url: url,
                    type: type,
                    data: JSON.stringify(data),
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                }).fail(function (error) {
                    console.log(error);
                });
            };
            var ref_ProductViewModel = new Object();
            var inputs = new Object();
            var selectedCategory;
            function createProduct() {
                ref_ProductViewModel.categoryRef = selectedCategory;
                ref_ProductViewModel.title = $("#title").val();
                console.log(ref_ProductViewModel);
                sendAjaxRequest('/Product/Create/', 'POST', ref_ProductViewModel);
            }
            $("#categoryRef").change(function () {
                selectedCategory = $(this).children("option:selected").val();
                console.log(this.children.option.innerHTML);
            })
            $("#btn-add").click(createProduct);
            $("#btn-select").click(function () {
                var $this = this;
                var divContent = $this.closest("div").children;
                console.log(divContent);
                inputs = {
                    category: divContent[0].innerText,
                    title: divContent[1].innerText,
                    productId: divContent[2].innerText,
                   
                }
                console.log(inputs);
                $("#title").val(inputs.title);
      
            })
        })
    </script>
</body>
</html>

